<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pb_close.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        B0vAGiPOlSKtAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>